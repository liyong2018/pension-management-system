<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.pension.dao.SystemUserDao">

    <!-- 结果映射 -->
    <resultMap id="systemUserMap" type="com.example.pension.model.SystemUser">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="passwordHash" column="password_hash"/>
        <result property="fullName" column="full_name"/>
        <result property="email" column="email"/>
        <result property="phone" column="phone"/>
        <result property="organizationId" column="organization_id"/>
        <result property="organizationName" column="organization_name"/>
        <result property="isAdmin" column="is_admin"/>
        <result property="isActive" column="is_active"/>
        <result property="lastLoginTime" column="last_login_time"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <!-- 基础查询字段 -->
    <sql id="baseColumns">
        su.id, su.username, su.password_hash, su.full_name, su.email, su.phone,
        su.organization_id, su.is_admin, su.is_active, su.last_login_time,
        su.create_time, su.update_time, o.name as organization_name
    </sql>

    <!-- 基础查询表 -->
    <sql id="baseTables">
        system_user su
        LEFT JOIN organization o ON su.organization_id = o.id
    </sql>

    <!-- 查询条件 -->
    <sql id="queryConditions">
        <where>
            1=1
            <if test="username != null and username != ''">
                AND su.username LIKE CONCAT('%', #{username}, '%')
            </if>
            <if test="fullName != null and fullName != ''">
                AND su.full_name LIKE CONCAT('%', #{fullName}, '%')
            </if>
            <if test="email != null and email != ''">
                AND su.email LIKE CONCAT('%', #{email}, '%')
            </if>
            <if test="organizationId != null">
                AND su.organization_id = #{organizationId}
            </if>
            <if test="isAdmin != null">
                AND su.is_admin = #{isAdmin}
            </if>
            <if test="isActive != null">
                AND su.is_active = #{isActive}
            </if>
        </where>
    </sql>

    <!-- 插入用户 -->
    <insert id="insert" parameterType="com.example.pension.model.SystemUser" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO system_user (
            username, password_hash, full_name, email, phone, organization_id,
            is_admin, is_active, create_time, update_time
        ) VALUES (
            #{username}, #{passwordHash}, #{fullName}, #{email}, #{phone}, #{organizationId},
            #{isAdmin}, #{isActive}, NOW(), NOW()
        )
    </insert>

    <!-- 更新用户 -->
    <update id="update" parameterType="com.example.pension.model.SystemUser">
        UPDATE system_user
        <set>
            <if test="username != null">username = #{username},</if>
            <if test="fullName != null">full_name = #{fullName},</if>
            <if test="email != null">email = #{email},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="organizationId != null">organization_id = #{organizationId},</if>
            <if test="isAdmin != null">is_admin = #{isAdmin},</if>
            <if test="isActive != null">is_active = #{isActive},</if>

            update_time = NOW()
        </set>
        WHERE id = #{id}
    </update>

    <!-- 更新密码 -->
    <update id="updatePassword">
        UPDATE system_user SET password_hash = #{passwordHash}, update_time = NOW()
        WHERE id = #{id}
    </update>

    <!-- 更新最后登录时间 -->
    <update id="updateLastLoginTime">
        UPDATE system_user SET last_login_time = #{lastLoginTime}, update_time = NOW()
        WHERE id = #{id}
    </update>

    <!-- 更新用户状态 -->
    <update id="updateActiveStatus">
        UPDATE system_user SET is_active = #{isActive}, update_time = NOW()
        WHERE id = #{id}
    </update>

    <!-- 根据ID删除用户 -->
    <delete id="deleteById">
        DELETE FROM system_user WHERE id = #{id}
    </delete>

    <!-- 批量删除用户 -->
    <delete id="deleteBatchByIds">
        DELETE FROM system_user WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <!-- 根据ID查询用户 -->
    <select id="findById" resultMap="systemUserMap">
        SELECT <include refid="baseColumns"/>
        FROM <include refid="baseTables"/>
        WHERE su.id = #{id}
    </select>

    <!-- 根据用户名查询用户 -->
    <select id="findByUsername" resultMap="systemUserMap">
        SELECT <include refid="baseColumns"/>
        FROM <include refid="baseTables"/>
        WHERE su.username = #{username}
    </select>

    <!-- 多条件查询用户 -->
    <select id="findWithConditions" resultMap="systemUserMap">
        SELECT <include refid="baseColumns"/>
        FROM <include refid="baseTables"/>
        <include refid="queryConditions"/>
        ORDER BY su.create_time DESC
    </select>

    <!-- 根据角色ID查询用户 -->
    <select id="findByRoleId" resultMap="systemUserMap">
        SELECT <include refid="baseColumns"/>
        FROM <include refid="baseTables"/>
        INNER JOIN user_role ur ON su.id = ur.user_id
        WHERE ur.role_id = #{roleId}
        ORDER BY su.create_time DESC
    </select>

    <!-- 统计活跃用户数 -->
    <select id="countActiveUsers" resultType="long">
        SELECT COUNT(*) FROM system_user WHERE is_active = true
    </select>

    <!-- 统计管理员用户数 -->
    <select id="countAdminUsers" resultType="long">
        SELECT COUNT(*) FROM system_user WHERE is_admin = true
    </select>

    <!-- 根据机构ID统计用户数 -->
    <select id="countByOrganizationId" resultType="long">
        SELECT COUNT(*) FROM system_user WHERE organization_id = #{organizationId}
    </select>

    <!-- 查询所有机构负责人 -->
    <select id="findDirectorsByRole" resultType="com.example.pension.dto.DirectorDTO">
        SELECT 
            u.id as userId,
            u.username,
            u.full_name as directorName,
            u.phone as directorContact,
            u.email,
            u.organization_id as organizationId,
            o.name as organizationName
        FROM system_user u
        INNER JOIN user_role ur ON u.id = ur.user_id
        INNER JOIN role r ON ur.role_id = r.id
        LEFT JOIN organization o ON u.organization_id = o.id
        WHERE r.role_key = 'ORG_DIRECTOR' 
          AND u.is_active = TRUE
        ORDER BY u.organization_id, u.full_name
    </select>

    <!-- 根据机构ID查询机构负责人 -->
    <select id="findDirectorsByOrganization" resultType="com.example.pension.dto.DirectorDTO">
        SELECT 
            u.id as userId,
            u.username,
            u.full_name as directorName,
            u.phone as directorContact,
            u.email,
            u.organization_id as organizationId,
            o.name as organizationName
        FROM system_user u
        INNER JOIN user_role ur ON u.id = ur.user_id
        INNER JOIN role r ON ur.role_id = r.id
        LEFT JOIN organization o ON u.organization_id = o.id
        WHERE r.role_key = 'ORG_DIRECTOR' 
          AND u.is_active = TRUE
          AND (#{organizationId} IS NULL OR u.organization_id = #{organizationId})
        ORDER BY u.full_name
    </select>

</mapper>