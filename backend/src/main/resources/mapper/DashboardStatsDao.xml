<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.pension.dao.DashboardStatsDao">

    <!-- ===== 老龄人口统计 ===== -->
    
    <!-- 获取老人总数 -->
    <select id="countTotalElderly" resultType="java.lang.Long">
        SELECT COUNT(*) FROM elderly_profile
    </select>
    
    <!-- 获取80岁以上老人数量 -->
    <select id="countElderlyOver80" resultType="java.lang.Long">
        SELECT COUNT(*) FROM elderly_profile 
        WHERE birth_date IS NOT NULL 
        AND TIMESTAMPDIFF(YEAR, birth_date, CURDATE()) >= 80
    </select>
    
    <!-- 获取独居老人数量 -->
    <select id="countLivingAloneElderly" resultType="java.lang.Long">
        SELECT COUNT(*) FROM elderly_profile 
        WHERE pension_type LIKE '%独居%' 
        OR ability_assessment LIKE '%独居%'
        OR remarks LIKE '%独居%'
    </select>
    
    <!-- 获取失能老人数量 -->
    <select id="countDisabledElderly" resultType="java.lang.Long">
        SELECT COUNT(*) FROM elderly_profile 
        WHERE ability_assessment IN ('轻度失能', '中度失能', '重度失能')
    </select>
    
    <!-- 获取低收入老人数量 -->
    <select id="countLowIncomeElderly" resultType="java.lang.Long">
        SELECT COUNT(*) FROM elderly_profile 
        WHERE elderly_type = 'low_income' 
        OR remarks LIKE '%低收入%' 
        OR remarks LIKE '%贫困%'
        OR remarks LIKE '%困难%'
    </select>
    
    <!-- 根据老人类型统计数量 -->
    <select id="countElderlyByType" resultType="java.lang.Long">
        SELECT COUNT(*) FROM elderly_profile 
        WHERE elderly_type = #{elderlyType}
    </select>
    
    <!-- 获取所有老人类型的统计数据 -->
    <select id="getElderlyTypeStatistics" resultType="java.util.Map">
        SELECT 
            ep.elderly_type as elderlyType,
            d.dict_label as elderlyTypeLabel,
            COUNT(*) as count
        FROM elderly_profile ep
        LEFT JOIN dictionary d ON ep.elderly_type = d.dict_code AND d.dict_type = 'elderly_type'
        WHERE ep.elderly_type IS NOT NULL
        GROUP BY ep.elderly_type, d.dict_label
        ORDER BY d.sort_order ASC
    </select>

    <!-- ===== 机构统计 ===== -->
    
    <!-- 获取机构总数 -->
    <select id="countTotalOrganizations" resultType="java.lang.Long">
        SELECT COUNT(*) FROM organization
    </select>
    
    <!-- 根据机构类型统计数量 -->
    <select id="countOrganizationsByType" resultType="java.lang.Long">
        SELECT COUNT(*) FROM organization 
        WHERE type = #{type}
    </select>

    <!-- ===== 从业人员统计 ===== -->
    
    <!-- 获取从业人员总数（从用户表中统计角色为机构从业人员的用户） -->
    <select id="countTotalStaff" resultType="java.lang.Long">
        SELECT COUNT(*) FROM system_user u
        INNER JOIN user_role ur ON u.id = ur.user_id
        INNER JOIN role r ON ur.role_id = r.id
        WHERE r.role_key = 'ORG_SERVER' 
        AND u.is_active = TRUE
    </select>
    
    <!-- 获取护理人员总数（从机构从业人员中筛选包含护理相关关键词的用户） -->
    <select id="countTotalNurses" resultType="java.lang.Long">
        SELECT COUNT(*) FROM system_user u
        INNER JOIN user_role ur ON u.id = ur.user_id
        INNER JOIN role r ON ur.role_id = r.id
        WHERE r.role_key = 'ORG_SERVER' 
        AND u.is_active = TRUE
        AND (u.full_name LIKE '%护理%' 
             OR u.full_name LIKE '%护士%' 
             OR u.username LIKE '%nurse%'
             OR u.username LIKE '%护理%')
    </select>
    
    <!-- 获取医生数量（从机构从业人员中筛选包含医生相关关键词的用户） -->
    <select id="countDoctors" resultType="java.lang.Long">
        SELECT COUNT(*) FROM system_user u
        INNER JOIN user_role ur ON u.id = ur.user_id
        INNER JOIN role r ON ur.role_id = r.id
        WHERE r.role_key = 'ORG_SERVER' 
        AND u.is_active = TRUE
        AND (u.full_name LIKE '%医生%' 
             OR u.full_name LIKE '%医师%'
             OR u.username LIKE '%doctor%'
             OR u.username LIKE '%dr%'
             OR u.username LIKE '%医生%')
    </select>
    
    <!-- 获取社工数量（从机构从业人员中筛选包含社工相关关键词的用户） -->
    <select id="countSocialWorkers" resultType="java.lang.Long">
        SELECT COUNT(*) FROM system_user u
        INNER JOIN user_role ur ON u.id = ur.user_id
        INNER JOIN role r ON ur.role_id = r.id
        WHERE r.role_key = 'ORG_SERVER' 
        AND u.is_active = TRUE
        AND (u.full_name LIKE '%社工%' 
             OR u.full_name LIKE '%社会工作%'
             OR u.username LIKE '%social%'
             OR u.username LIKE '%社工%')
    </select>

    <!-- ===== 老人类型统计 ===== -->
    
    <!-- 根据能力评估统计老人数量 -->
    <select id="countElderlyByAbilityAssessment" resultType="java.lang.Long">
        SELECT COUNT(*) FROM elderly_profile 
        WHERE ability_assessment = #{assessment}
    </select>
    
    <!-- 根据养老类型统计老人数量 -->
    <select id="countElderlyByPensionType" resultType="java.lang.Long">
        SELECT COUNT(*) FROM elderly_profile 
        WHERE pension_type = #{pensionType}
    </select>

    <!-- ===== 年龄分布统计 ===== -->
    
    <!-- 统计各年龄段老人数量 -->
    <select id="countElderlyByAgeRange" resultType="java.lang.Long">
        SELECT COUNT(*) FROM elderly_profile 
        WHERE birth_date IS NOT NULL 
        <if test="maxAge != null">
            AND TIMESTAMPDIFF(YEAR, birth_date, CURDATE()) &lt;= #{maxAge}
        </if>
        <if test="minAge != null">
            AND TIMESTAMPDIFF(YEAR, birth_date, CURDATE()) >= #{minAge}
        </if>
    </select>

    <!-- ===== 设备统计 ===== -->
    
    <!-- 根据设备类型统计数量 -->
    <select id="countDevicesByType" resultType="java.lang.Long">
        SELECT COUNT(*) FROM smart_device 
        WHERE (
            CASE 
                WHEN #{deviceType} = 'SOS' THEN (device_name LIKE '%SOS%' OR device_name LIKE '%紧急%' OR device_name LIKE '%报警器%' OR device_type LIKE '%安全%')
                WHEN #{deviceType} = '烟感' THEN (device_name LIKE '%烟感%' OR device_name LIKE '%烟雾%' OR device_model LIKE '%SMOKE%' OR device_model LIKE '%DS-PDSMK%')
                WHEN #{deviceType} = '水浸' THEN (device_name LIKE '%水浸%' OR device_name LIKE '%水位%' OR device_name LIKE '%漏水%')
                WHEN #{deviceType} = '跌倒' THEN (device_name LIKE '%跌倒%' OR device_name LIKE '%摔倒%')
                WHEN #{deviceType} = '燃气' THEN (device_name LIKE '%燃气%' OR device_name LIKE '%气体%' OR device_name LIKE '%煤气%')
                ELSE device_type LIKE CONCAT('%', #{deviceType}, '%')
            END
        )
        AND is_deleted = 0
    </select>
    
    <!-- 根据设备状态统计数量 -->
    <select id="countDevicesByStatus" resultType="java.lang.Long">
        SELECT COUNT(*) FROM smart_device 
        WHERE device_status = #{deviceStatus}
        AND is_deleted = 0
    </select>
    
    <!-- 获取设备总数 -->
    <select id="countTotalDevices" resultType="java.lang.Long">
        SELECT COUNT(*) FROM smart_device 
        WHERE is_deleted = 0
    </select>

    <!-- ===== 告警统计 ===== -->
    
    <!-- 获取今日告警数量 -->
    <select id="countTodayAlarms" resultType="java.lang.Long">
        SELECT COUNT(*) FROM device_alarm_record 
        WHERE DATE(alarm_time) = CURDATE()
    </select>
    
    <!-- 获取本周告警数量 -->
    <select id="countWeekAlarms" resultType="java.lang.Long">
        SELECT COUNT(*) FROM device_alarm_record 
        WHERE alarm_time >= DATE_SUB(CURDATE(), INTERVAL WEEKDAY(CURDATE()) DAY)
        AND alarm_time &lt; DATE_ADD(DATE_SUB(CURDATE(), INTERVAL WEEKDAY(CURDATE()) DAY), INTERVAL 7 DAY)
    </select>
    
    <!-- 获取本月告警数量 -->
    <select id="countMonthAlarms" resultType="java.lang.Long">
        SELECT COUNT(*) FROM device_alarm_record 
        WHERE YEAR(alarm_time) = YEAR(CURDATE()) 
        AND MONTH(alarm_time) = MONTH(CURDATE())
    </select>
    
    <!-- 获取未处理告警数量 -->
    <select id="countUnhandledAlarms" resultType="java.lang.Long">
        SELECT COUNT(*) FROM device_alarm_record 
        WHERE process_status = '未处理'
    </select>

    <!-- ===== 地图数据 ===== -->
    
    <!-- 获取社区统计数据 -->
    <select id="getCommunityStats" resultType="java.util.Map">
        SELECT 
            d.dict_value as name,
            COALESCE(ep_count.elderlyCount, 0) as elderlyCount,
            CASE 
                WHEN d.dict_value = '朝阳公园社区' THEN 116.4203
                WHEN d.dict_value = '中关村社区' THEN 116.3145
                WHEN d.dict_value = '东直门社区' THEN 116.4217
                WHEN d.dict_value = '三里屯社区' THEN 116.4472
                WHEN d.dict_value = '丰台社区' THEN 116.2867
                WHEN d.dict_value = '海淀社区' THEN 116.2982
                WHEN d.dict_value = '西单社区' THEN 116.3668
                WHEN d.dict_value = '王府井社区' THEN 116.4074
                WHEN d.dict_value = '中山社区' THEN 116.3950
                WHEN d.dict_value = '石景山社区' THEN 116.1950
                WHEN d.dict_value = '测试社区' THEN 116.4100
                ELSE 116.4074 + (RAND() - 0.5) * 0.1
            END as longitude,
            CASE 
                WHEN d.dict_value = '朝阳公园社区' THEN 39.9289
                WHEN d.dict_value = '中关村社区' THEN 39.9831
                WHEN d.dict_value = '东直门社区' THEN 39.9434
                WHEN d.dict_value = '三里屯社区' THEN 39.9364
                WHEN d.dict_value = '丰台社区' THEN 39.8583
                WHEN d.dict_value = '海淀社区' THEN 39.9590
                WHEN d.dict_value = '西单社区' THEN 39.9097
                WHEN d.dict_value = '王府井社区' THEN 39.9042
                WHEN d.dict_value = '中山社区' THEN 39.9150
                WHEN d.dict_value = '石景山社区' THEN 39.9063
                WHEN d.dict_value = '测试社区' THEN 39.9100
                ELSE 39.9042 + (RAND() - 0.5) * 0.1
            END as latitude,
            'community' as type,
            0 as facilityCount
        FROM dictionary d
        LEFT JOIN (
            SELECT community, COUNT(*) as elderlyCount
            FROM elderly_profile 
            WHERE community IS NOT NULL AND community != ''
            GROUP BY community
        ) ep_count ON d.dict_value = ep_count.community
        WHERE d.dict_type = 'community' AND d.status = 'ACTIVE'
        ORDER BY COALESCE(ep_count.elderlyCount, 0) DESC
    </select>
    
    <!-- 获取机构数据 -->
    <select id="getOrganizationStats" resultType="java.util.Map">
        SELECT 
            name as name,
            COALESCE(longitude, 116.4074 + (RAND() - 0.5) * 0.3) as longitude,
            COALESCE(latitude, 39.9042 + (RAND() - 0.5) * 0.2) as latitude,
            type as type,
            bed_count as bedCount,
            employee_count as staffCount,
            actual_service_count as serviceCount
        FROM organization
        ORDER BY bed_count DESC
    </select>
    
    <!-- 获取老人位置数据 -->
    <select id="getElderlyLocationStats" resultType="java.util.Map">
        SELECT 
            ep.name as elderlyName,
            ep.community as community,
            ep.address_detail as address,
            CASE 
                WHEN ep.community = '朝阳公园社区' THEN 116.4203 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '中关村社区' THEN 116.3145 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '东直门社区' THEN 116.4217 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '三里屯社区' THEN 116.4472 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '丰台社区' THEN 116.2867 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '海淀社区' THEN 116.2982 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '西单社区' THEN 116.3668 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '王府井社区' THEN 116.4074 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '中山社区' THEN 116.3950 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '建国门社区' THEN 116.4350 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '石景山社区' THEN 116.1950 + (RAND() - 0.5) * 0.01
                ELSE 116.4074 + (RAND() - 0.5) * 0.05
            END as longitude,
            CASE 
                WHEN ep.community = '朝阳公园社区' THEN 39.9289 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '中关村社区' THEN 39.9831 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '东直门社区' THEN 39.9434 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '三里屯社区' THEN 39.9364 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '丰台社区' THEN 39.8583 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '海淀社区' THEN 39.9590 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '西单社区' THEN 39.9097 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '王府井社区' THEN 39.9042 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '中山社区' THEN 39.9150 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '建国门社区' THEN 39.9080 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '石景山社区' THEN 39.9063 + (RAND() - 0.5) * 0.01
                ELSE 39.9042 + (RAND() - 0.5) * 0.05
            END as latitude,
            ep.elderly_type as elderlyType,
            ep.ability_assessment as abilityAssessment,
            TIMESTAMPDIFF(YEAR, ep.birth_date, CURDATE()) as age,
            ep.gender as gender
        FROM elderly_profile ep
        WHERE ep.community IS NOT NULL AND ep.community != ''
        ORDER BY ep.id
        LIMIT 50
    </select>
    
    <!-- 获取告警位置数据 -->
    <select id="getAlarmLocationStats" resultType="java.util.Map">
        SELECT 
            dar.alarm_type as alarmType,
            dar.alarm_level as alarmLevel,
            COALESCE(sd.installation_location, CONCAT(ep.community, ep.address_detail)) as location,
            dar.alarm_time as alarmTime,
            dar.process_status as processStatus,
            CASE 
                WHEN ep.community = '朝阳公园社区' OR sd.installation_location LIKE '%朝阳公园%' THEN 116.4203 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '中关村社区' OR sd.installation_location LIKE '%中关村%' THEN 116.3145 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '东直门社区' OR sd.installation_location LIKE '%东直门%' THEN 116.4217 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '三里屯社区' OR sd.installation_location LIKE '%三里屯%' THEN 116.4472 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '丰台社区' OR sd.installation_location LIKE '%丰台%' THEN 116.2867 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '海淀社区' OR sd.installation_location LIKE '%海淀%' THEN 116.2982 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '西单社区' OR sd.installation_location LIKE '%西单%' THEN 116.3668 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '王府井社区' OR sd.installation_location LIKE '%王府井%' THEN 116.4074 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '中山社区' OR sd.installation_location LIKE '%中山%' THEN 116.3950 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '建国门社区' OR sd.installation_location LIKE '%建国门%' THEN 116.4350 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '石景山社区' OR sd.installation_location LIKE '%石景山%' THEN 116.1950 + (RAND() - 0.5) * 0.01
                ELSE 116.4074 + (RAND() - 0.5) * 0.05
            END as longitude,
            CASE 
                WHEN ep.community = '朝阳公园社区' OR sd.installation_location LIKE '%朝阳公园%' THEN 39.9289 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '中关村社区' OR sd.installation_location LIKE '%中关村%' THEN 39.9831 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '东直门社区' OR sd.installation_location LIKE '%东直门%' THEN 39.9434 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '三里屯社区' OR sd.installation_location LIKE '%三里屯%' THEN 39.9364 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '丰台社区' OR sd.installation_location LIKE '%丰台%' THEN 39.8583 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '海淀社区' OR sd.installation_location LIKE '%海淀%' THEN 39.9590 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '西单社区' OR sd.installation_location LIKE '%西单%' THEN 39.9097 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '王府井社区' OR sd.installation_location LIKE '%王府井%' THEN 39.9042 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '中山社区' OR sd.installation_location LIKE '%中山%' THEN 39.9150 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '建国门社区' OR sd.installation_location LIKE '%建国门%' THEN 39.9080 + (RAND() - 0.5) * 0.01
                WHEN ep.community = '石景山社区' OR sd.installation_location LIKE '%石景山%' THEN 39.9063 + (RAND() - 0.5) * 0.01
                ELSE 39.9042 + (RAND() - 0.5) * 0.05
            END as latitude
        FROM device_alarm_record dar
        LEFT JOIN smart_device sd ON dar.device_id = sd.id
        LEFT JOIN elderly_profile ep ON sd.elderly_id = ep.id
        WHERE dar.alarm_time >= DATE_SUB(NOW(), INTERVAL 30 DAY)
        ORDER BY dar.alarm_time DESC
        LIMIT 20
    </select>
    
    <!-- 获取最近告警数据 -->
    <select id="getRecentAlarms" resultType="java.util.Map">
        SELECT 
            dar.alarm_type as type,
            CONCAT(ep.community, ep.name) as location,
            DATE_FORMAT(dar.alarm_time, '%Y-%m-%d %H:%i:%s') as time,
            dar.alarm_level as level,
            dar.process_status as status
        FROM device_alarm_record dar
        LEFT JOIN smart_device sd ON dar.device_id = sd.id
        LEFT JOIN elderly_profile ep ON sd.elderly_id = ep.id
        ORDER BY dar.alarm_time DESC
        LIMIT #{limit}
    </select>
    
    <!-- 获取设备运行状态详细信息 -->
    <select id="getDeviceStatusDetails" resultType="java.util.Map">
        SELECT 
            CASE 
                WHEN device_name LIKE '%红外%' OR device_name LIKE '%探测%' THEN '红外探测器'
                WHEN device_name LIKE '%门磁%' OR device_name LIKE '%门窗%' THEN '门磁传感器'
                WHEN device_name LIKE '%水浸%' OR device_name LIKE '%水位%' THEN '水浸传感器'
                WHEN device_name LIKE '%光照%' OR device_name LIKE '%光线%' THEN '光照传感器'
                WHEN device_name LIKE '%SOS%' OR device_name LIKE '%紧急%' OR device_name LIKE '%报警器%' THEN '紧急按钮'
                WHEN device_name LIKE '%烟感%' OR device_name LIKE '%烟雾%' THEN '烟感器'
                WHEN device_name LIKE '%温度%' OR device_name LIKE '%温控%' THEN '温度传感器'
                WHEN device_name LIKE '%湿度%' THEN '湿度传感器'
                ELSE CONCAT(device_type, '设备')
            END as deviceName,
            COUNT(*) as totalCount,
            SUM(CASE WHEN device_status = '故障' THEN 1 ELSE 0 END) as faultCount,
            SUM(CASE WHEN device_status = '在线' THEN 1 ELSE 0 END) as onlineCount
        FROM smart_device 
        WHERE is_deleted = 0
        GROUP BY 
            CASE 
                WHEN device_name LIKE '%红外%' OR device_name LIKE '%探测%' THEN '红外探测器'
                WHEN device_name LIKE '%门磁%' OR device_name LIKE '%门窗%' THEN '门磁传感器'
                WHEN device_name LIKE '%水浸%' OR device_name LIKE '%水位%' THEN '水浸传感器'
                WHEN device_name LIKE '%光照%' OR device_name LIKE '%光线%' THEN '光照传感器'
                WHEN device_name LIKE '%SOS%' OR device_name LIKE '%紧急%' OR device_name LIKE '%报警器%' THEN '紧急按钮'
                WHEN device_name LIKE '%烟感%' OR device_name LIKE '%烟雾%' THEN '烟感器'
                WHEN device_name LIKE '%温度%' OR device_name LIKE '%温控%' THEN '温度传感器'
                WHEN device_name LIKE '%湿度%' THEN '湿度传感器'
                ELSE CONCAT(device_type, '设备')
            END
        ORDER BY totalCount DESC
    </select>

</mapper> 