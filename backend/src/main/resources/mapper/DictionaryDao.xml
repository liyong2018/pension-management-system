<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.pension.dao.DictionaryDao">

    <!-- 结果映射 -->
    <resultMap id="dictionaryMap" type="com.example.pension.model.Dictionary">
        <id property="id" column="id"/>
        <result property="dictType" column="dict_type"/>
        <result property="dictCode" column="dict_code"/>
        <result property="dictLabel" column="dict_label"/>
        <result property="dictValue" column="dict_value"/>
        <result property="sortOrder" column="sort_order"/>
        <result property="status" column="status"/>
        <result property="remark" column="remark"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <!-- 基础查询字段 -->
    <sql id="baseColumns">
        id, dict_type, dict_code, dict_label, dict_value, sort_order, status, remark, create_time, update_time
    </sql>

    <!-- 查询条件 -->
    <sql id="queryConditions">
        <where>
            1=1
            <if test="dictType != null and dictType != ''">
                AND dict_type = #{dictType}
            </if>
            <if test="dictCode != null and dictCode != ''">
                AND dict_code LIKE CONCAT('%', #{dictCode}, '%')
            </if>
            <if test="dictLabel != null and dictLabel != ''">
                AND dict_label LIKE CONCAT('%', #{dictLabel}, '%')
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
        </where>
    </sql>

    <!-- 插入字典 -->
    <insert id="insert" parameterType="com.example.pension.model.Dictionary" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO dictionary (
            dict_type, dict_code, dict_label, dict_value, sort_order, status, remark, create_time, update_time
        ) VALUES (
            #{dictType}, #{dictCode}, #{dictLabel}, #{dictValue}, #{sortOrder}, #{status}, #{remark}, NOW(), NOW()
        )
    </insert>

    <!-- 更新字典 -->
    <update id="update" parameterType="com.example.pension.model.Dictionary">
        UPDATE dictionary
        <set>
            <if test="dictType != null">dict_type = #{dictType},</if>
            <if test="dictCode != null">dict_code = #{dictCode},</if>
            <if test="dictLabel != null">dict_label = #{dictLabel},</if>
            <if test="dictValue != null">dict_value = #{dictValue},</if>
            <if test="sortOrder != null">sort_order = #{sortOrder},</if>
            <if test="status != null">status = #{status},</if>
            <if test="remark != null">remark = #{remark},</if>
            update_time = NOW()
        </set>
        WHERE id = #{id}
    </update>

    <!-- 根据ID删除字典 -->
    <delete id="deleteById">
        DELETE FROM dictionary WHERE id = #{id}
    </delete>

    <!-- 批量删除字典 -->
    <delete id="deleteBatchByIds">
        DELETE FROM dictionary WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <!-- 根据ID查询字典 -->
    <select id="findById" resultMap="dictionaryMap">
        SELECT <include refid="baseColumns"/>
        FROM dictionary
        WHERE id = #{id}
    </select>

    <!-- 根据类型查询字典 -->
    <select id="findByType" resultMap="dictionaryMap">
        SELECT <include refid="baseColumns"/>
        FROM dictionary
        WHERE dict_type = #{dictType}
        ORDER BY sort_order ASC, create_time DESC
    </select>

    <!-- 多条件查询字典 -->
    <select id="findWithConditions" resultMap="dictionaryMap">
        SELECT <include refid="baseColumns"/>
        FROM dictionary
        <include refid="queryConditions"/>
        ORDER BY sort_order ASC, create_time DESC
    </select>

    <!-- 查询所有字典 -->
    <select id="findAll" resultMap="dictionaryMap">
        SELECT <include refid="baseColumns"/>
        FROM dictionary
        ORDER BY dict_type, sort_order ASC, create_time DESC
    </select>

    <!-- 根据类型统计数量 -->
    <select id="countByType" resultType="long">
        SELECT COUNT(*) FROM dictionary WHERE dict_type = #{dictType}
    </select>

    <!-- 根据类型和编码查询字典 -->
    <select id="findByTypeAndCode" resultMap="dictionaryMap">
        SELECT <include refid="baseColumns"/>
        FROM dictionary
        WHERE dict_type = #{dictType} AND dict_code = #{dictCode}
    </select>

</mapper> 